name: crc_terraform_backend
on:
  push:
    branches:
      - "test"
permissions:
  id-token: write
  contents: write
  
jobs:
  Tests:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash
        working-directory: ./
    
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with: 
          role-to-assume: arn:aws:iam::053127563287:role/GithubActionsRole
          aws-region: ca-central-1
#Checkout git repository for pipeline run
      - name: checkout
        uses: actions/checkout@v3

#Install Python and run unit tests on Lambda python code
      - name: Install Python 3.1
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.0-alpha.7'

      - run: pip3 install -r requirements.txt
        
      - run: python3 ./Lambda/tests.py 
#Install Terraform on runner vm
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.4

 #Test deployment in test environment   
      - name: Terraform INIT
        run: terraform init

      - name: Select Terraform Test Workspace
        run: terraform workspace select test

      - name: Terraform Plan in Test
        run: terraform plan -var-file="test.tfvars" -out deploy.tf

      - name: Terraform Apply in test
        run: terraform apply deploy.tf

  Destroy: 
    if: ${{ always() }}
    needs: Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./
    
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with: 
          role-to-assume: arn:aws:iam::053127563287:role/GithubActionsRole
          aws-region: ca-central-1
#Checkout git repository for pipeline run
      - name: checkout
        uses: actions/checkout@v3

      #Install Terraform on runner vm
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.4
  
      - name: Terraform INIT
        run: terraform init

      - name: Select Terraform Test Workspace
        run: terraform workspace select test

      - name: Terraform Plan Destroy Test Resources
        run: terraform plan -destroy -var-file="test.tfvars" -out destroy.tf

      - name: Terraform Apply Destroy Test Resources
        run: terraform apply destroy.tf

  Main_Branch_Pull_Request:
    permissions: write-all
    needs: Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./
        

    steps:
      - name: Create Pull request
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh pr create --head "test" --base "main" --title "Merge Tested Changes into Main Repository" --body "Deploying to production" --repo "tim-grieve/CloudResumeBackend"




